(self.webpackChunk_docstack_ui=self.webpackChunk_docstack_ui||[]).push([[1851],{27250:e=>{var o=1e3,r=60*o,t=60*r,n=24*t,i=7*n;function s(e,o,r,t){var n=o>=1.5*r;return Math.round(e/r)+" "+t+(n?"s":"")}e.exports=function(e,c){c=c||{};var a,d,l=typeof e;if("string"===l&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var s=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(s){var c=parseFloat(s[1]);switch((s[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*c;case"weeks":case"week":case"w":return c*i;case"days":case"day":case"d":return c*n;case"hours":case"hour":case"hrs":case"hr":case"h":return c*t;case"minutes":case"minute":case"mins":case"min":case"m":return c*r;case"seconds":case"second":case"secs":case"sec":case"s":return c*o;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return c;default:return}}}}(e);if("number"===l&&isFinite(e))return c.long?(a=e,(d=Math.abs(a))>=n?s(a,d,n,"day"):d>=t?s(a,d,t,"hour"):d>=r?s(a,d,r,"minute"):d>=o?s(a,d,o,"second"):a+" ms"):function(e){var i=Math.abs(e);return i>=n?Math.round(e/n)+"d":i>=t?Math.round(e/t)+"h":i>=r?Math.round(e/r)+"m":i>=o?Math.round(e/o)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},76243:(e,o,r)=>{"use strict";r.d(o,{k:()=>t});const t=(0,r(82399).u1)("telemetryService")},25654:(e,o,r)=>{"use strict";r.d(o,{Dk:()=>l,IN:()=>h,RE:()=>k,XS:()=>f,cv:()=>s,ho:()=>d,ir:()=>i,m$:()=>u,mk:()=>a,oJ:()=>c,t8:()=>g});var t=r(40061),n=r(94901);const i={keybindingLabelBackground:(0,t.GuP)(t.HDX),keybindingLabelForeground:(0,t.GuP)(t.eUu),keybindingLabelBorder:(0,t.GuP)(t.zUX),keybindingLabelBottomBorder:(0,t.GuP)(t.Qfh),keybindingLabelShadow:(0,t.GuP)(t.f9l)},s={buttonForeground:(0,t.GuP)(t.G_h),buttonSeparator:(0,t.GuP)(t.Q1$),buttonBackground:(0,t.GuP)(t.XJc),buttonHoverBackground:(0,t.GuP)(t.T9h),buttonSecondaryForeground:(0,t.GuP)(t.Inn),buttonSecondaryBackground:(0,t.GuP)(t.xOA),buttonSecondaryHoverBackground:(0,t.GuP)(t.nZG),buttonBorder:(0,t.GuP)(t.raQ)},c={progressBarBackground:(0,t.GuP)(t.BTi)},a={inputActiveOptionBorder:(0,t.GuP)(t.uNK),inputActiveOptionForeground:(0,t.GuP)(t.$$0),inputActiveOptionBackground:(0,t.GuP)(t.c1f)},d=((0,t.GuP)(t.jOE),(0,t.GuP)(t.Ukx),(0,t.GuP)(t.Ips),(0,t.GuP)(t.kPT),(0,t.GuP)(t.xWN),(0,t.GuP)(t.ZBU),(0,t.GuP)(t.jr9),(0,t.GuP)(t.OcU),(0,t.GuP)(t.C5U),(0,t.GuP)(t.t0B),(0,t.GuP)(t.CgL),(0,t.GuP)(t.FiB),(0,t.GuP)(t.f9l),(0,t.GuP)(t.b1q),(0,t.GuP)(t.tYX),(0,t.GuP)(t.JPj),(0,t.GuP)(t.bNw),(0,t.GuP)(t.vwp),{inputBackground:(0,t.GuP)(t.L4c),inputForeground:(0,t.GuP)(t.cws),inputBorder:(0,t.GuP)(t.Zgs),inputValidationInfoBorder:(0,t.GuP)(t.YSW),inputValidationInfoBackground:(0,t.GuP)(t.I$A),inputValidationInfoForeground:(0,t.GuP)(t.L9Z),inputValidationWarningBorder:(0,t.GuP)(t.C1n),inputValidationWarningBackground:(0,t.GuP)(t.ULt),inputValidationWarningForeground:(0,t.GuP)(t.T5N),inputValidationErrorBorder:(0,t.GuP)(t.eYZ),inputValidationErrorBackground:(0,t.GuP)(t._$n),inputValidationErrorForeground:(0,t.GuP)(t.h9z)}),l={listFilterWidgetBackground:(0,t.GuP)(t.pnl),listFilterWidgetOutline:(0,t.GuP)(t.fiM),listFilterWidgetNoMatchesOutline:(0,t.GuP)(t.P9Z),listFilterWidgetShadow:(0,t.GuP)(t.H8q),inputBoxStyles:d,toggleStyles:a},u={badgeBackground:(0,t.GuP)(t.WMx),badgeForeground:(0,t.GuP)(t.zRE),badgeBorder:(0,t.GuP)(t.b1q)},h=((0,t.GuP)(t.vV$),(0,t.GuP)(t.mc0),(0,t.GuP)(t.etE),(0,t.GuP)(t.etE),(0,t.GuP)(t.sAS),{listBackground:void 0,listInactiveFocusForeground:void 0,listFocusBackground:(0,t.GuP)(t.VFX),listFocusForeground:(0,t.GuP)(t.efJ),listFocusOutline:(0,t.GuP)(t.p7Y),listActiveSelectionBackground:(0,t.GuP)(t.Rjz),listActiveSelectionForeground:(0,t.GuP)(t.GVV),listActiveSelectionIconForeground:(0,t.GuP)(t.fED),listFocusAndSelectionOutline:(0,t.GuP)(t.gtq),listFocusAndSelectionBackground:(0,t.GuP)(t.Rjz),listFocusAndSelectionForeground:(0,t.GuP)(t.GVV),listInactiveSelectionBackground:(0,t.GuP)(t.uNx),listInactiveSelectionIconForeground:(0,t.GuP)(t.C9U),listInactiveSelectionForeground:(0,t.GuP)(t.f4y),listInactiveFocusBackground:(0,t.GuP)(t.CQ3),listInactiveFocusOutline:(0,t.GuP)(t.ijf),listHoverBackground:(0,t.GuP)(t.lO1),listHoverForeground:(0,t.GuP)(t.QRv),listDropOverBackground:(0,t.GuP)(t.Yoe),listDropBetweenBackground:(0,t.GuP)(t.yIp),listSelectionOutline:(0,t.GuP)(t.buw),listHoverOutline:(0,t.GuP)(t.buw),treeIndentGuidesStroke:(0,t.GuP)(t.U4U),treeInactiveIndentGuidesStroke:(0,t.GuP)(t.pft),treeStickyScrollBackground:void 0,treeStickyScrollBorder:void 0,treeStickyScrollShadow:(0,t.GuP)(t.bXl),tableColumnsBorder:(0,t.GuP)(t.k5u),tableOddRowsBackgroundColor:(0,t.GuP)(t.sbQ)});function g(e){return function(e,o){const r={...o};for(const o in e){const n=e[o];r[o]=void 0!==n?(0,t.GuP)(n):void 0}return r}(e,h)}const k={selectBackground:(0,t.GuP)(t.rvE),selectListBackground:(0,t.GuP)(t.lWP),selectForeground:(0,t.GuP)(t.yqq),decoratorRightForeground:(0,t.GuP)(t.NBf),selectBorder:(0,t.GuP)(t.HcB),focusBorder:(0,t.GuP)(t.tAP),listFocusBackground:(0,t.GuP)(t.AlL),listInactiveSelectionIconForeground:(0,t.GuP)(t.c7i),listFocusForeground:(0,t.GuP)(t.nH),listFocusOutline:(0,t.HP_)(t.buw,n.Q1.transparent.toString()),listHoverBackground:(0,t.GuP)(t.lO1),listHoverForeground:(0,t.GuP)(t.QRv),listHoverOutline:(0,t.GuP)(t.buw),selectListBorder:(0,t.GuP)(t.sIe),listBackground:void 0,listActiveSelectionBackground:void 0,listActiveSelectionForeground:void 0,listActiveSelectionIconForeground:void 0,listFocusAndSelectionBackground:void 0,listDropOverBackground:void 0,listDropBetweenBackground:void 0,listInactiveSelectionBackground:void 0,listInactiveSelectionForeground:void 0,listInactiveFocusBackground:void 0,listInactiveFocusOutline:void 0,listSelectionOutline:void 0,listFocusAndSelectionForeground:void 0,listFocusAndSelectionOutline:void 0,listInactiveFocusForeground:void 0,tableColumnsBorder:void 0,tableOddRowsBackgroundColor:void 0,treeIndentGuidesStroke:void 0,treeInactiveIndentGuidesStroke:void 0,treeStickyScrollBackground:void 0,treeStickyScrollBorder:void 0,treeStickyScrollShadow:void 0},f={shadowColor:(0,t.GuP)(t.f9l),borderColor:(0,t.GuP)(t.g$2),foregroundColor:(0,t.GuP)(t.dd_),backgroundColor:(0,t.GuP)(t.c6Y),selectionForegroundColor:(0,t.GuP)(t.pmr),selectionBackgroundColor:(0,t.GuP)(t.Ux$),selectionBorderColor:(0,t.GuP)(t.SNb),separatorColor:(0,t.GuP)(t.D7X),scrollbarShadow:(0,t.GuP)(t.bXl),scrollbarSliderBackground:(0,t.GuP)(t.gnV),scrollbarSliderHoverBackground:(0,t.GuP)(t.cI_),scrollbarSliderActiveBackground:(0,t.GuP)(t.mhZ)}},68183:(e,o,r)=>{"use strict";r.d(o,{r:()=>a,s:()=>d});var t=r(14333),n=r(2106),i=r(10998),s=r(58881),c=r(11210);function a(e){const o=new i.Cm,r=o.add(new n.vl),s=(0,c.HT)();return o.add(s.onDidChange((()=>r.fire()))),e&&o.add(e.onDidProductIconThemeChange((()=>r.fire()))),{dispose:()=>o.dispose(),onDidChange:r.event,getCSS(){const o=e?e.getProductIconTheme():new d,r={},n=[],i=[];for(const e of s.getIcons()){const s=o.getIcon(e);if(!s)continue;const c=s.font,a=`--vscode-icon-${e.id}-font-family`,d=`--vscode-icon-${e.id}-content`;c?(r[c.id]=c.definition,i.push(`${a}: ${(0,t.yt)(c.id)};`,`${d}: '${s.fontCharacter}';`),n.push(`.codicon-${e.id}:before { content: '${s.fontCharacter}'; font-family: ${(0,t.yt)(c.id)}; }`)):(i.push(`${d}: '${s.fontCharacter}'; ${a}: 'codicon';`),n.push(`.codicon-${e.id}:before { content: '${s.fontCharacter}'; }`))}for(const e in r){const o=r[e],i=o.weight?`font-weight: ${o.weight};`:"",s=o.style?`font-style: ${o.style};`:"",c=o.src.map((e=>`${(0,t.Tf)(e.location)} format('${e.format}')`)).join(", ");n.push(`@font-face { src: ${c}; font-family: ${(0,t.yt)(e)};${i}${s} font-display: block; }`)}return n.push(`:root { ${i.join(" ")} }`),n.join("\n")}}}class d{getIcon(e){const o=(0,c.HT)();let r=e.defaults;for(;s.L.isThemeIcon(r);){const e=o.getIcon(r.id);if(!e)return;r=e.defaults}return r}}},40061:(e,o,r)=>{"use strict";r.d(o,{FdG:()=>g,buw:()=>_,GuP:()=>u,Bbc:()=>l,HP_:()=>h,WMx:()=>E,zRE:()=>T,sAS:()=>ve,vV$:()=>me,etE:()=>be,mc0:()=>pe,XJc:()=>io,raQ:()=>co,G_h:()=>to,T9h:()=>so,xOA:()=>lo,Inn:()=>ao,nZG:()=>uo,Q1$:()=>no,OcU:()=>vo,C5U:()=>Fo,t0B:()=>Bo,b1q:()=>I,EY1:()=>ce,ZEf:()=>ae,Gj6:()=>de,ld8:()=>ue,$BZ:()=>he,GNm:()=>le,YtV:()=>O,Rbi:()=>M,Ubg:()=>ee,By2:()=>Q,i61:()=>z,oZ8:()=>te,tan:()=>Z,IIb:()=>K,pOz:()=>N,rm4:()=>X,QwA:()=>J,whs:()=>V,Stt:()=>j,Hng:()=>q,CgL:()=>U,sIe:()=>$,FiB:()=>W,tAP:()=>L,c1f:()=>$e,uNK:()=>Ue,$$0:()=>Me,L4c:()=>xe,Zgs:()=>Qe,cws:()=>Oe,_$n:()=>Ye,eYZ:()=>Ze,h9z:()=>Xe,I$A:()=>Ve,YSW:()=>je,L9Z:()=>qe,ULt:()=>Ne,C1n:()=>ze,T5N:()=>Ke,HDX:()=>wo,zUX:()=>So,Qfh:()=>Co,eUu:()=>yo,Rjz:()=>Ao,GVV:()=>Eo,fED:()=>To,yIp:()=>Wo,Yoe:()=>Uo,pnl:()=>qo,P9Z:()=>No,fiM:()=>jo,H8q:()=>Ko,gtq:()=>_o,VFX:()=>Do,efJ:()=>Lo,p7Y:()=>Io,lO1:()=>Oo,QRv:()=>Qo,CQ3:()=>Ho,ijf:()=>xo,uNx:()=>Po,f4y:()=>Ro,C9U:()=>Go,c6Y:()=>or,g$2:()=>Jo,dd_:()=>er,Ux$:()=>tr,SNb:()=>nr,pmr:()=>rr,D7X:()=>ir,ILr:()=>Ge,yLC:()=>Re,K1Z:()=>He,KoI:()=>Te,yr0:()=>Ee,uMG:()=>Pe,iwL:()=>lr,NBf:()=>dr,tYX:()=>Le,bNw:()=>_e,JPj:()=>Ie,BTi:()=>x,ELA:()=>sr,HJZ:()=>cr,AlL:()=>kr,nH:()=>hr,c7i:()=>gr,er1:()=>ar,Ukx:()=>go,Ips:()=>ko,jOE:()=>ho,xWN:()=>po,ZBU:()=>mo,kPT:()=>fo,jr9:()=>bo,x1A:()=>f,bXl:()=>P,mhZ:()=>H,gnV:()=>R,cI_:()=>G,rvE:()=>Je,HcB:()=>ro,yqq:()=>oo,lWP:()=>eo,k5u:()=>Xo,sbQ:()=>Zo,vwp:()=>A,pft:()=>Yo,U4U:()=>zo,DSL:()=>ke,f9l:()=>ge});var t=r(87110),n=r(65958),i=r(94901),s=r(2106),c=r(51460),a=r(67167),d=r(19746);function l(e){return`--vscode-${e.replace(/\./g,"-")}`}function u(e){return`var(${l(e)})`}function h(e,o){return`var(${l(e)}, ${o})`}const g={ColorContribution:"base.contributions.colors"},k=new class{constructor(){this._onDidChangeSchema=new s.vl,this.onDidChangeSchema=this._onDidChangeSchema.event,this.colorSchema={type:"object",properties:{}},this.colorReferenceSchema={type:"string",enum:[],enumDescriptions:[]},this.colorsById={}}registerColor(e,o,r,t=!1,n){const i={id:e,description:r,defaults:o,needsTransparency:t,deprecationMessage:n};this.colorsById[e]=i;const s={type:"string",format:"color-hex",defaultSnippets:[{body:"${1:#ff0000}"}]};return n&&(s.deprecationMessage=n),t&&(s.pattern="^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$",s.patternErrorMessage=d.kg("transparecyRequired","This color must be transparent or it will obscure content")),this.colorSchema.properties[e]={description:r,oneOf:[s,{type:"string",const:"default",description:d.kg("useDefault","Use the default color.")}]},this.colorReferenceSchema.enum.push(e),this.colorReferenceSchema.enumDescriptions.push(r),this._onDidChangeSchema.fire(),e}getColors(){return Object.keys(this.colorsById).map((e=>this.colorsById[e]))}resolveDefaultColor(e,o){const r=this.colorsById[e];if(r?.defaults)return F(null!==(t=r.defaults)&&"object"==typeof t&&"light"in t&&"dark"in t?r.defaults[o.type]:r.defaults,o);var t}getColorSchema(){return this.colorSchema}toString(){return Object.keys(this.colorsById).sort(((e,o)=>{const r=-1===e.indexOf(".")?0:1,t=-1===o.indexOf(".")?0:1;return r!==t?r-t:e.localeCompare(o)})).map((e=>`- \`${e}\`: ${this.colorsById[e].description}`)).join("\n")}};function f(e,o,r,t,n){return k.registerColor(e,o,r,t,n)}function p(e,o){return{op:0,value:e,factor:o}}function m(e,o){return{op:1,value:e,factor:o}}function b(e,o){return{op:2,value:e,factor:o}}function v(...e){return{op:4,values:e}}function B(e,o,r,t){return{op:5,value:e,background:o,factor:r,transparency:t}}function F(e,o){if(null!==e)return"string"==typeof e?"#"===e[0]?i.Q1.fromHex(e):o.getColor(e):e instanceof i.Q1?e:"object"==typeof e?function(e,o){switch(e.op){case 0:return F(e.value,o)?.darken(e.factor);case 1:return F(e.value,o)?.lighten(e.factor);case 2:return F(e.value,o)?.transparent(e.factor);case 3:{const r=F(e.background,o);return r?F(e.value,o)?.makeOpaque(r):F(e.value,o)}case 4:for(const r of e.values){const e=F(r,o);if(e)return e}return;case 6:return F(o.defines(e.if)?e.then:e.else,o);case 5:{const r=F(e.value,o);if(!r)return;const t=F(e.background,o);return t?r.isDarkerThan(t)?i.Q1.getLighterColor(r,t,e.factor).transparent(e.transparency):i.Q1.getDarkerColor(r,t,e.factor).transparent(e.transparency):r.transparent(e.factor*e.transparency)}default:throw(0,t.xb)(e)}}(e,o):void 0}a.O.add(g.ColorContribution,k);const w="vscode://schemas/workbench-colors",y=a.O.as(c.F.JSONContribution);y.registerSchema(w,k.getColorSchema());const S=new n.uC((()=>y.notifySchemaChanged(w)),200);k.onDidChangeSchema((()=>{S.isScheduled()||S.schedule()}));const C=f("foreground",{dark:"#CCCCCC",light:"#616161",hcDark:"#FFFFFF",hcLight:"#292929"},d.kg("foreground","Overall foreground color. This color is only used if not overridden by a component.")),D=(f("disabledForeground",{dark:"#CCCCCC80",light:"#61616180",hcDark:"#A5A5A5",hcLight:"#7F7F7F"},d.kg("disabledForeground","Overall foreground for disabled elements. This color is only used if not overridden by a component.")),f("errorForeground",{dark:"#F48771",light:"#A1260D",hcDark:"#F48771",hcLight:"#B5200D"},d.kg("errorForeground","Overall foreground color for error messages. This color is only used if not overridden by a component.")),f("descriptionForeground",{light:"#717171",dark:b(C,.7),hcDark:b(C,.7),hcLight:b(C,.7)},d.kg("descriptionForeground","Foreground color for description text providing additional information, for example for a label.")),f("icon.foreground",{dark:"#C5C5C5",light:"#424242",hcDark:"#FFFFFF",hcLight:"#292929"},d.kg("iconForeground","The default color for icons in the workbench."))),L=f("focusBorder",{dark:"#007FD4",light:"#0090F1",hcDark:"#F38518",hcLight:"#006BBD"},d.kg("focusBorder","Overall border color for focused elements. This color is only used if not overridden by a component.")),I=f("contrastBorder",{light:null,dark:null,hcDark:"#6FC3DF",hcLight:"#0F4A85"},d.kg("contrastBorder","An extra border around elements to separate them from others for greater contrast.")),_=f("contrastActiveBorder",{light:null,dark:null,hcDark:L,hcLight:L},d.kg("activeContrastBorder","An extra border around active elements to separate them from others for greater contrast.")),A=(f("selection.background",null,d.kg("selectionBackground","The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.")),f("textLink.foreground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},d.kg("textLinkForeground","Foreground color for links in text."))),E=(f("textLink.activeForeground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},d.kg("textLinkActiveForeground","Foreground color for links in text when clicked on and on mouse hover.")),f("textSeparator.foreground",{light:"#0000002e",dark:"#ffffff2e",hcDark:i.Q1.black,hcLight:"#292929"},d.kg("textSeparatorForeground","Color for text separators.")),f("textPreformat.foreground",{light:"#A31515",dark:"#D7BA7D",hcDark:"#000000",hcLight:"#FFFFFF"},d.kg("textPreformatForeground","Foreground color for preformatted text segments.")),f("textPreformat.background",{light:"#0000001A",dark:"#FFFFFF1A",hcDark:"#FFFFFF",hcLight:"#09345f"},d.kg("textPreformatBackground","Background color for preformatted text segments.")),f("textBlockQuote.background",{light:"#f2f2f2",dark:"#222222",hcDark:null,hcLight:"#F2F2F2"},d.kg("textBlockQuoteBackground","Background color for block quotes in text.")),f("textBlockQuote.border",{light:"#007acc80",dark:"#007acc80",hcDark:i.Q1.white,hcLight:"#292929"},d.kg("textBlockQuoteBorder","Border color for block quotes in text.")),f("textCodeBlock.background",{light:"#dcdcdc66",dark:"#0a0a0a66",hcDark:i.Q1.black,hcLight:"#F2F2F2"},d.kg("textCodeBlockBackground","Background color for code blocks in text.")),f("sash.hoverBorder",L,d.kg("sashActiveBorder","Border color of active sashes.")),f("badge.background",{dark:"#4D4D4D",light:"#C4C4C4",hcDark:i.Q1.black,hcLight:"#0F4A85"},d.kg("badgeBackground","Badge background color. Badges are small information labels, e.g. for search results count."))),T=f("badge.foreground",{dark:i.Q1.white,light:"#333",hcDark:i.Q1.white,hcLight:i.Q1.white},d.kg("badgeForeground","Badge foreground color. Badges are small information labels, e.g. for search results count.")),P=f("scrollbar.shadow",{dark:"#000000",light:"#DDDDDD",hcDark:null,hcLight:null},d.kg("scrollbarShadow","Scrollbar shadow to indicate that the view is scrolled.")),R=f("scrollbarSlider.background",{dark:i.Q1.fromHex("#797979").transparent(.4),light:i.Q1.fromHex("#646464").transparent(.4),hcDark:b(I,.6),hcLight:b(I,.4)},d.kg("scrollbarSliderBackground","Scrollbar slider background color.")),G=f("scrollbarSlider.hoverBackground",{dark:i.Q1.fromHex("#646464").transparent(.7),light:i.Q1.fromHex("#646464").transparent(.7),hcDark:b(I,.8),hcLight:b(I,.8)},d.kg("scrollbarSliderHoverBackground","Scrollbar slider background color when hovering.")),H=f("scrollbarSlider.activeBackground",{dark:i.Q1.fromHex("#BFBFBF").transparent(.4),light:i.Q1.fromHex("#000000").transparent(.6),hcDark:I,hcLight:I},d.kg("scrollbarSliderActiveBackground","Scrollbar slider background color when clicked on.")),x=f("progressBar.background",{dark:i.Q1.fromHex("#0E70C0"),light:i.Q1.fromHex("#0E70C0"),hcDark:I,hcLight:I},d.kg("progressBarBackground","Background color of the progress bar that can show for long running operations.")),O=f("editor.background",{light:"#ffffff",dark:"#1E1E1E",hcDark:i.Q1.black,hcLight:i.Q1.white},d.kg("editorBackground","Editor background color.")),Q=f("editor.foreground",{light:"#333333",dark:"#BBBBBB",hcDark:i.Q1.white,hcLight:C},d.kg("editorForeground","Editor default foreground color.")),U=(f("editorStickyScroll.background",O,d.kg("editorStickyScrollBackground","Background color of sticky scroll in the editor")),f("editorStickyScrollHover.background",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:null,hcLight:i.Q1.fromHex("#0F4A85").transparent(.1)},d.kg("editorStickyScrollHoverBackground","Background color of sticky scroll on hover in the editor")),f("editorStickyScroll.border",{dark:null,light:null,hcDark:I,hcLight:I},d.kg("editorStickyScrollBorder","Border color of sticky scroll in the editor")),f("editorStickyScroll.shadow",P,d.kg("editorStickyScrollShadow"," Shadow color of sticky scroll in the editor")),f("editorWidget.background",{dark:"#252526",light:"#F3F3F3",hcDark:"#0C141F",hcLight:i.Q1.white},d.kg("editorWidgetBackground","Background color of editor widgets, such as find/replace."))),W=f("editorWidget.foreground",C,d.kg("editorWidgetForeground","Foreground color of editor widgets, such as find/replace.")),$=f("editorWidget.border",{dark:"#454545",light:"#C8C8C8",hcDark:I,hcLight:I},d.kg("editorWidgetBorder","Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.")),M=(f("editorWidget.resizeBorder",null,d.kg("editorWidgetResizeBorder","Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")),f("editorError.background",null,d.kg("editorError.background","Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),f("editorError.foreground",{dark:"#F14C4C",light:"#E51400",hcDark:"#F48771",hcLight:"#B5200D"},d.kg("editorError.foreground","Foreground color of error squigglies in the editor."))),V=(f("editorError.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#E47777").transparent(.8),hcLight:"#B5200D"},d.kg("errorBorder","If set, color of double underlines for errors in the editor.")),f("editorWarning.background",null,d.kg("editorWarning.background","Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0)),q=f("editorWarning.foreground",{dark:"#CCA700",light:"#BF8803",hcDark:"#FFD370",hcLight:"#895503"},d.kg("editorWarning.foreground","Foreground color of warning squigglies in the editor.")),j=f("editorWarning.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#FFCC00").transparent(.8),hcLight:i.Q1.fromHex("#FFCC00").transparent(.8)},d.kg("warningBorder","If set, color of double underlines for warnings in the editor.")),N=(f("editorInfo.background",null,d.kg("editorInfo.background","Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),f("editorInfo.foreground",{dark:"#3794FF",light:"#1a85ff",hcDark:"#3794FF",hcLight:"#1a85ff"},d.kg("editorInfo.foreground","Foreground color of info squigglies in the editor."))),K=f("editorInfo.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#3794FF").transparent(.8),hcLight:"#292929"},d.kg("infoBorder","If set, color of double underlines for infos in the editor.")),z=f("editorHint.foreground",{dark:i.Q1.fromHex("#eeeeee").transparent(.7),light:"#6c6c6c",hcDark:null,hcLight:null},d.kg("editorHint.foreground","Foreground color of hint squigglies in the editor.")),Y=(f("editorHint.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#eeeeee").transparent(.8),hcLight:"#292929"},d.kg("hintBorder","If set, color of double underlines for hints in the editor.")),f("editorLink.activeForeground",{dark:"#4E94CE",light:i.Q1.blue,hcDark:i.Q1.cyan,hcLight:"#292929"},d.kg("activeLinkForeground","Color of active links.")),f("editor.selectionBackground",{light:"#ADD6FF",dark:"#264F78",hcDark:"#f3f518",hcLight:"#0F4A85"},d.kg("editorSelectionBackground","Color of the editor selection."))),X=f("editor.selectionForeground",{light:null,dark:null,hcDark:"#000000",hcLight:i.Q1.white},d.kg("editorSelectionForeground","Color of the selected text for high contrast.")),Z=f("editor.inactiveSelectionBackground",{light:b(Y,.5),dark:b(Y,.5),hcDark:b(Y,.7),hcLight:b(Y,.5)},d.kg("editorInactiveSelection","Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."),!0),J=f("editor.selectionHighlightBackground",{light:B(Y,O,.3,.6),dark:B(Y,O,.3,.6),hcDark:null,hcLight:null},d.kg("editorSelectionHighlight","Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."),!0),ee=(f("editor.selectionHighlightBorder",{light:null,dark:null,hcDark:_,hcLight:_},d.kg("editorSelectionHighlightBorder","Border color for regions with the same content as the selection.")),f("editor.findMatchBackground",{light:"#A8AC94",dark:"#515C6A",hcDark:null,hcLight:null},d.kg("editorFindMatch","Color of the current search match.")),f("editor.findMatchForeground",null,d.kg("editorFindMatchForeground","Text color of the current search match.")),f("editor.findMatchHighlightBackground",{light:"#EA5C0055",dark:"#EA5C0055",hcDark:null,hcLight:null},d.kg("findMatchHighlight","Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."),!0)),oe=(f("editor.findMatchHighlightForeground",null,d.kg("findMatchHighlightForeground","Foreground color of the other search matches."),!0),f("editor.findRangeHighlightBackground",{dark:"#3a3d4166",light:"#b4b4b44d",hcDark:null,hcLight:null},d.kg("findRangeHighlight","Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),f("editor.findMatchBorder",{light:null,dark:null,hcDark:_,hcLight:_},d.kg("editorFindMatchBorder","Border color of the current search match.")),f("editor.findMatchHighlightBorder",{light:null,dark:null,hcDark:_,hcLight:_},d.kg("findMatchHighlightBorder","Border color of the other search matches."))),re=(f("editor.findRangeHighlightBorder",{dark:null,light:null,hcDark:b(_,.4),hcLight:b(_,.4)},d.kg("findRangeHighlightBorder","Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),f("editor.hoverHighlightBackground",{light:"#ADD6FF26",dark:"#264f7840",hcDark:"#ADD6FF26",hcLight:null},d.kg("hoverHighlight","Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."),!0),f("editorHoverWidget.background",U,d.kg("hoverBackground","Background color of the editor hover."))),te=(f("editorHoverWidget.foreground",W,d.kg("hoverForeground","Foreground color of the editor hover.")),f("editorHoverWidget.border",$,d.kg("hoverBorder","Border color of the editor hover."))),ne=(f("editorHoverWidget.statusBarBackground",{dark:m(re,.2),light:p(re,.05),hcDark:U,hcLight:U},d.kg("statusBarBackground","Background color of the editor hover status bar.")),f("editorInlayHint.foreground",{dark:"#969696",light:"#969696",hcDark:i.Q1.white,hcLight:i.Q1.black},d.kg("editorInlayHintForeground","Foreground color of inline hints"))),ie=f("editorInlayHint.background",{dark:b(E,.1),light:b(E,.1),hcDark:b(i.Q1.white,.1),hcLight:b(E,.1)},d.kg("editorInlayHintBackground","Background color of inline hints")),se=(f("editorInlayHint.typeForeground",ne,d.kg("editorInlayHintForegroundTypes","Foreground color of inline hints for types")),f("editorInlayHint.typeBackground",ie,d.kg("editorInlayHintBackgroundTypes","Background color of inline hints for types")),f("editorInlayHint.parameterForeground",ne,d.kg("editorInlayHintForegroundParameter","Foreground color of inline hints for parameters")),f("editorInlayHint.parameterBackground",ie,d.kg("editorInlayHintBackgroundParameter","Background color of inline hints for parameters")),f("editorLightBulb.foreground",{dark:"#FFCC00",light:"#DDB100",hcDark:"#FFCC00",hcLight:"#007ACC"},d.kg("editorLightBulbForeground","The color used for the lightbulb actions icon."))),ce=(f("editorLightBulbAutoFix.foreground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},d.kg("editorLightBulbAutoFixForeground","The color used for the lightbulb auto fix actions icon.")),f("editorLightBulbAi.foreground",se,d.kg("editorLightBulbAiForeground","The color used for the lightbulb AI icon.")),f("editor.snippetTabstopHighlightBackground",{dark:new i.Q1(new i.bU(124,124,124,.3)),light:new i.Q1(new i.bU(10,50,100,.2)),hcDark:new i.Q1(new i.bU(124,124,124,.3)),hcLight:new i.Q1(new i.bU(10,50,100,.2))},d.kg("snippetTabstopHighlightBackground","Highlight background color of a snippet tabstop.")),f("editor.snippetTabstopHighlightBorder",null,d.kg("snippetTabstopHighlightBorder","Highlight border color of a snippet tabstop.")),f("editor.snippetFinalTabstopHighlightBackground",null,d.kg("snippetFinalTabstopHighlightBackground","Highlight background color of the final tabstop of a snippet.")),f("editor.snippetFinalTabstopHighlightBorder",{dark:"#525252",light:new i.Q1(new i.bU(10,50,100,.5)),hcDark:"#525252",hcLight:"#292929"},d.kg("snippetFinalTabstopHighlightBorder","Highlight border color of the final tabstop of a snippet.")),new i.Q1(new i.bU(155,185,85,.2))),ae=new i.Q1(new i.bU(255,0,0,.2)),de=f("diffEditor.insertedTextBackground",{dark:"#9ccc2c33",light:"#9ccc2c40",hcDark:null,hcLight:null},d.kg("diffEditorInserted","Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),le=f("diffEditor.removedTextBackground",{dark:"#ff000033",light:"#ff000033",hcDark:null,hcLight:null},d.kg("diffEditorRemoved","Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),ue=(f("diffEditor.insertedLineBackground",{dark:ce,light:ce,hcDark:null,hcLight:null},d.kg("diffEditorInsertedLines","Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),f("diffEditor.removedLineBackground",{dark:ae,light:ae,hcDark:null,hcLight:null},d.kg("diffEditorRemovedLines","Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),f("diffEditorGutter.insertedLineBackground",null,d.kg("diffEditorInsertedLineGutter","Background color for the margin where lines got inserted.")),f("diffEditorGutter.removedLineBackground",null,d.kg("diffEditorRemovedLineGutter","Background color for the margin where lines got removed.")),f("diffEditorOverview.insertedForeground",null,d.kg("diffEditorOverviewInserted","Diff overview ruler foreground for inserted content."))),he=f("diffEditorOverview.removedForeground",null,d.kg("diffEditorOverviewRemoved","Diff overview ruler foreground for removed content.")),ge=(f("diffEditor.insertedTextBorder",{dark:null,light:null,hcDark:"#33ff2eff",hcLight:"#374E06"},d.kg("diffEditorInsertedOutline","Outline color for the text that got inserted.")),f("diffEditor.removedTextBorder",{dark:null,light:null,hcDark:"#FF008F",hcLight:"#AD0707"},d.kg("diffEditorRemovedOutline","Outline color for text that got removed.")),f("diffEditor.border",{dark:null,light:null,hcDark:I,hcLight:I},d.kg("diffEditorBorder","Border color between the two text editors.")),f("diffEditor.diagonalFill",{dark:"#cccccc33",light:"#22222233",hcDark:null,hcLight:null},d.kg("diffDiagonalFill","Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")),f("diffEditor.unchangedRegionBackground","sideBar.background",d.kg("diffEditor.unchangedRegionBackground","The background color of unchanged blocks in the diff editor.")),f("diffEditor.unchangedRegionForeground","foreground",d.kg("diffEditor.unchangedRegionForeground","The foreground color of unchanged blocks in the diff editor.")),f("diffEditor.unchangedCodeBackground",{dark:"#74747429",light:"#b8b8b829",hcDark:null,hcLight:null},d.kg("diffEditor.unchangedCodeBackground","The background color of unchanged code in the diff editor.")),f("widget.shadow",{dark:b(i.Q1.black,.36),light:b(i.Q1.black,.16),hcDark:null,hcLight:null},d.kg("widgetShadow","Shadow color of widgets such as find/replace inside the editor."))),ke=f("widget.border",{dark:null,light:null,hcDark:I,hcLight:I},d.kg("widgetBorder","Border color of widgets such as find/replace inside the editor.")),fe=f("toolbar.hoverBackground",{dark:"#5a5d5e50",light:"#b8b8b850",hcDark:null,hcLight:null},d.kg("toolbarHoverBackground","Toolbar background when hovering over actions using the mouse")),pe=(f("toolbar.hoverOutline",{dark:null,light:null,hcDark:_,hcLight:_},d.kg("toolbarHoverOutline","Toolbar outline when hovering over actions using the mouse")),f("toolbar.activeBackground",{dark:m(fe,.1),light:p(fe,.1),hcDark:null,hcLight:null},d.kg("toolbarActiveBackground","Toolbar background when holding the mouse over actions")),f("breadcrumb.foreground",b(C,.8),d.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items."))),me=f("breadcrumb.background",O,d.kg("breadcrumbsBackground","Background color of breadcrumb items.")),be=f("breadcrumb.focusForeground",{light:p(C,.2),dark:m(C,.1),hcDark:m(C,.1),hcLight:m(C,.1)},d.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),ve=f("breadcrumb.activeSelectionForeground",{light:p(C,.2),dark:m(C,.1),hcDark:m(C,.1),hcLight:m(C,.1)},d.kg("breadcrumbsSelectedForeground","Color of selected breadcrumb items.")),Be=(f("breadcrumbPicker.background",U,d.kg("breadcrumbsSelectedBackground","Background color of breadcrumb item picker.")),i.Q1.fromHex("#40C8AE").transparent(.5)),Fe=i.Q1.fromHex("#40A6FF").transparent(.5),we=i.Q1.fromHex("#606060").transparent(.4),ye=f("merge.currentHeaderBackground",{dark:Be,light:Be,hcDark:null,hcLight:null},d.kg("mergeCurrentHeaderBackground","Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),Se=(f("merge.currentContentBackground",b(ye,.4),d.kg("mergeCurrentContentBackground","Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),f("merge.incomingHeaderBackground",{dark:Fe,light:Fe,hcDark:null,hcLight:null},d.kg("mergeIncomingHeaderBackground","Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),Ce=(f("merge.incomingContentBackground",b(Se,.4),d.kg("mergeIncomingContentBackground","Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),f("merge.commonHeaderBackground",{dark:we,light:we,hcDark:null,hcLight:null},d.kg("mergeCommonHeaderBackground","Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),De=(f("merge.commonContentBackground",b(Ce,.4),d.kg("mergeCommonContentBackground","Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),f("merge.border",{dark:null,light:null,hcDark:"#C3DF6F",hcLight:"#007ACC"},d.kg("mergeBorder","Border color on headers and the splitter in inline merge-conflicts."))),Le=(f("editorOverviewRuler.currentContentForeground",{dark:b(ye,1),light:b(ye,1),hcDark:De,hcLight:De},d.kg("overviewRulerCurrentContentForeground","Current overview ruler foreground for inline merge-conflicts.")),f("editorOverviewRuler.incomingContentForeground",{dark:b(Se,1),light:b(Se,1),hcDark:De,hcLight:De},d.kg("overviewRulerIncomingContentForeground","Incoming overview ruler foreground for inline merge-conflicts.")),f("editorOverviewRuler.commonContentForeground",{dark:b(Ce,1),light:b(Ce,1),hcDark:De,hcLight:De},d.kg("overviewRulerCommonContentForeground","Common ancestor overview ruler foreground for inline merge-conflicts.")),f("editorOverviewRuler.findMatchForeground",{dark:"#d186167e",light:"#d186167e",hcDark:"#AB5A00",hcLight:"#AB5A00"},d.kg("overviewRulerFindMatchForeground","Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."),!0),f("editorOverviewRuler.selectionHighlightForeground","#A0A0A0CC",d.kg("overviewRulerSelectionHighlightForeground","Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."),!0),f("problemsErrorIcon.foreground",M,d.kg("problemsErrorIconForeground","The color used for the problems error icon."))),Ie=f("problemsWarningIcon.foreground",q,d.kg("problemsWarningIconForeground","The color used for the problems warning icon.")),_e=f("problemsInfoIcon.foreground",N,d.kg("problemsInfoIconForeground","The color used for the problems info icon.")),Ae=f("minimap.findMatchHighlight",{light:"#d18616",dark:"#d18616",hcDark:"#AB5A00",hcLight:"#0F4A85"},d.kg("minimapFindMatchHighlight","Minimap marker color for find matches."),!0),Ee=(f("minimap.selectionOccurrenceHighlight",{light:"#c9c9c9",dark:"#676767",hcDark:"#ffffff",hcLight:"#0F4A85"},d.kg("minimapSelectionOccurrenceHighlight","Minimap marker color for repeating editor selections."),!0),f("minimap.selectionHighlight",{light:"#ADD6FF",dark:"#264F78",hcDark:"#ffffff",hcLight:"#0F4A85"},d.kg("minimapSelectionHighlight","Minimap marker color for the editor selection."),!0)),Te=f("minimap.infoHighlight",{dark:N,light:N,hcDark:K,hcLight:K},d.kg("minimapInfo","Minimap marker color for infos.")),Pe=f("minimap.warningHighlight",{dark:q,light:q,hcDark:j,hcLight:j},d.kg("overviewRuleWarning","Minimap marker color for warnings.")),Re=f("minimap.errorHighlight",{dark:new i.Q1(new i.bU(255,18,18,.7)),light:new i.Q1(new i.bU(255,18,18,.7)),hcDark:new i.Q1(new i.bU(255,50,50,1)),hcLight:"#B5200D"},d.kg("minimapError","Minimap marker color for errors.")),Ge=f("minimap.background",null,d.kg("minimapBackground","Minimap background color.")),He=f("minimap.foregroundOpacity",i.Q1.fromHex("#000f"),d.kg("minimapForegroundOpacity",'Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.')),xe=(f("minimapSlider.background",b(R,.5),d.kg("minimapSliderBackground","Minimap slider background color.")),f("minimapSlider.hoverBackground",b(G,.5),d.kg("minimapSliderHoverBackground","Minimap slider background color when hovering.")),f("minimapSlider.activeBackground",b(H,.5),d.kg("minimapSliderActiveBackground","Minimap slider background color when clicked on.")),f("charts.foreground",C,d.kg("chartsForeground","The foreground color used in charts.")),f("charts.lines",b(C,.5),d.kg("chartsLines","The color used for horizontal lines in charts.")),f("charts.red",M,d.kg("chartsRed","The red color used in chart visualizations.")),f("charts.blue",N,d.kg("chartsBlue","The blue color used in chart visualizations.")),f("charts.yellow",q,d.kg("chartsYellow","The yellow color used in chart visualizations.")),f("charts.orange",Ae,d.kg("chartsOrange","The orange color used in chart visualizations.")),f("charts.green",{dark:"#89D185",light:"#388A34",hcDark:"#89D185",hcLight:"#374e06"},d.kg("chartsGreen","The green color used in chart visualizations.")),f("charts.purple",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},d.kg("chartsPurple","The purple color used in chart visualizations.")),f("input.background",{dark:"#3C3C3C",light:i.Q1.white,hcDark:i.Q1.black,hcLight:i.Q1.white},d.kg("inputBoxBackground","Input box background."))),Oe=f("input.foreground",C,d.kg("inputBoxForeground","Input box foreground.")),Qe=f("input.border",{dark:null,light:null,hcDark:I,hcLight:I},d.kg("inputBoxBorder","Input box border.")),Ue=f("inputOption.activeBorder",{dark:"#007ACC",light:"#007ACC",hcDark:I,hcLight:I},d.kg("inputBoxActiveOptionBorder","Border color of activated options in input fields.")),We=f("inputOption.hoverBackground",{dark:"#5a5d5e80",light:"#b8b8b850",hcDark:null,hcLight:null},d.kg("inputOption.hoverBackground","Background color of activated options in input fields.")),$e=f("inputOption.activeBackground",{dark:b(L,.4),light:b(L,.2),hcDark:i.Q1.transparent,hcLight:i.Q1.transparent},d.kg("inputOption.activeBackground","Background hover color of options in input fields.")),Me=f("inputOption.activeForeground",{dark:i.Q1.white,light:i.Q1.black,hcDark:C,hcLight:C},d.kg("inputOption.activeForeground","Foreground color of activated options in input fields.")),Ve=(f("input.placeholderForeground",{light:b(C,.5),dark:b(C,.5),hcDark:b(C,.7),hcLight:b(C,.7)},d.kg("inputPlaceholderForeground","Input box foreground color for placeholder text.")),f("inputValidation.infoBackground",{dark:"#063B49",light:"#D6ECF2",hcDark:i.Q1.black,hcLight:i.Q1.white},d.kg("inputValidationInfoBackground","Input validation background color for information severity."))),qe=f("inputValidation.infoForeground",{dark:null,light:null,hcDark:null,hcLight:C},d.kg("inputValidationInfoForeground","Input validation foreground color for information severity.")),je=f("inputValidation.infoBorder",{dark:"#007acc",light:"#007acc",hcDark:I,hcLight:I},d.kg("inputValidationInfoBorder","Input validation border color for information severity.")),Ne=f("inputValidation.warningBackground",{dark:"#352A05",light:"#F6F5D2",hcDark:i.Q1.black,hcLight:i.Q1.white},d.kg("inputValidationWarningBackground","Input validation background color for warning severity.")),Ke=f("inputValidation.warningForeground",{dark:null,light:null,hcDark:null,hcLight:C},d.kg("inputValidationWarningForeground","Input validation foreground color for warning severity.")),ze=f("inputValidation.warningBorder",{dark:"#B89500",light:"#B89500",hcDark:I,hcLight:I},d.kg("inputValidationWarningBorder","Input validation border color for warning severity.")),Ye=f("inputValidation.errorBackground",{dark:"#5A1D1D",light:"#F2DEDE",hcDark:i.Q1.black,hcLight:i.Q1.white},d.kg("inputValidationErrorBackground","Input validation background color for error severity.")),Xe=f("inputValidation.errorForeground",{dark:null,light:null,hcDark:null,hcLight:C},d.kg("inputValidationErrorForeground","Input validation foreground color for error severity.")),Ze=f("inputValidation.errorBorder",{dark:"#BE1100",light:"#BE1100",hcDark:I,hcLight:I},d.kg("inputValidationErrorBorder","Input validation border color for error severity.")),Je=f("dropdown.background",{dark:"#3C3C3C",light:i.Q1.white,hcDark:i.Q1.black,hcLight:i.Q1.white},d.kg("dropdownBackground","Dropdown background.")),eo=f("dropdown.listBackground",{dark:null,light:null,hcDark:i.Q1.black,hcLight:i.Q1.white},d.kg("dropdownListBackground","Dropdown list background.")),oo=f("dropdown.foreground",{dark:"#F0F0F0",light:C,hcDark:i.Q1.white,hcLight:C},d.kg("dropdownForeground","Dropdown foreground.")),ro=f("dropdown.border",{dark:Je,light:"#CECECE",hcDark:I,hcLight:I},d.kg("dropdownBorder","Dropdown border.")),to=f("button.foreground",i.Q1.white,d.kg("buttonForeground","Button foreground color.")),no=f("button.separator",b(to,.4),d.kg("buttonSeparator","Button separator color.")),io=f("button.background",{dark:"#0E639C",light:"#007ACC",hcDark:null,hcLight:"#0F4A85"},d.kg("buttonBackground","Button background color.")),so=f("button.hoverBackground",{dark:m(io,.2),light:p(io,.2),hcDark:io,hcLight:io},d.kg("buttonHoverBackground","Button background color when hovering.")),co=f("button.border",I,d.kg("buttonBorder","Button border color.")),ao=f("button.secondaryForeground",{dark:i.Q1.white,light:i.Q1.white,hcDark:i.Q1.white,hcLight:C},d.kg("buttonSecondaryForeground","Secondary button foreground color.")),lo=f("button.secondaryBackground",{dark:"#3A3D41",light:"#5F6A79",hcDark:null,hcLight:i.Q1.white},d.kg("buttonSecondaryBackground","Secondary button background color.")),uo=f("button.secondaryHoverBackground",{dark:m(lo,.2),light:p(lo,.2),hcDark:null,hcLight:null},d.kg("buttonSecondaryHoverBackground","Secondary button background color when hovering.")),ho=f("radio.activeForeground",Me,d.kg("radioActiveForeground","Foreground color of active radio option.")),go=f("radio.activeBackground",$e,d.kg("radioBackground","Background color of active radio option.")),ko=f("radio.activeBorder",Ue,d.kg("radioActiveBorder","Border color of the active radio option.")),fo=f("radio.inactiveForeground",null,d.kg("radioInactiveForeground","Foreground color of inactive radio option.")),po=f("radio.inactiveBackground",null,d.kg("radioInactiveBackground","Background color of inactive radio option.")),mo=f("radio.inactiveBorder",{light:b(ho,.2),dark:b(ho,.2),hcDark:b(ho,.4),hcLight:b(ho,.2)},d.kg("radioInactiveBorder","Border color of the inactive radio option.")),bo=f("radio.inactiveHoverBackground",We,d.kg("radioHoverBackground","Background color of inactive active radio option when hovering.")),vo=f("checkbox.background",Je,d.kg("checkbox.background","Background color of checkbox widget.")),Bo=(f("checkbox.selectBackground",U,d.kg("checkbox.select.background","Background color of checkbox widget when the element it's in is selected.")),f("checkbox.foreground",oo,d.kg("checkbox.foreground","Foreground color of checkbox widget."))),Fo=f("checkbox.border",ro,d.kg("checkbox.border","Border color of checkbox widget.")),wo=(f("checkbox.selectBorder",D,d.kg("checkbox.select.border","Border color of checkbox widget when the element it's in is selected.")),f("keybindingLabel.background",{dark:new i.Q1(new i.bU(128,128,128,.17)),light:new i.Q1(new i.bU(221,221,221,.4)),hcDark:i.Q1.transparent,hcLight:i.Q1.transparent},d.kg("keybindingLabelBackground","Keybinding label background color. The keybinding label is used to represent a keyboard shortcut."))),yo=f("keybindingLabel.foreground",{dark:i.Q1.fromHex("#CCCCCC"),light:i.Q1.fromHex("#555555"),hcDark:i.Q1.white,hcLight:C},d.kg("keybindingLabelForeground","Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.")),So=f("keybindingLabel.border",{dark:new i.Q1(new i.bU(51,51,51,.6)),light:new i.Q1(new i.bU(204,204,204,.4)),hcDark:new i.Q1(new i.bU(111,195,223)),hcLight:I},d.kg("keybindingLabelBorder","Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.")),Co=f("keybindingLabel.bottomBorder",{dark:new i.Q1(new i.bU(68,68,68,.6)),light:new i.Q1(new i.bU(187,187,187,.4)),hcDark:new i.Q1(new i.bU(111,195,223)),hcLight:C},d.kg("keybindingLabelBottomBorder","Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.")),Do=f("list.focusBackground",null,d.kg("listFocusBackground","List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Lo=f("list.focusForeground",null,d.kg("listFocusForeground","List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Io=f("list.focusOutline",{dark:L,light:L,hcDark:_,hcLight:_},d.kg("listFocusOutline","List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),_o=f("list.focusAndSelectionOutline",null,d.kg("listFocusAndSelectionOutline","List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.")),Ao=f("list.activeSelectionBackground",{dark:"#04395E",light:"#0060C0",hcDark:null,hcLight:i.Q1.fromHex("#0F4A85").transparent(.1)},d.kg("listActiveSelectionBackground","List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Eo=f("list.activeSelectionForeground",{dark:i.Q1.white,light:i.Q1.white,hcDark:null,hcLight:null},d.kg("listActiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),To=f("list.activeSelectionIconForeground",null,d.kg("listActiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Po=f("list.inactiveSelectionBackground",{dark:"#37373D",light:"#E4E6F1",hcDark:null,hcLight:i.Q1.fromHex("#0F4A85").transparent(.1)},d.kg("listInactiveSelectionBackground","List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ro=f("list.inactiveSelectionForeground",null,d.kg("listInactiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Go=f("list.inactiveSelectionIconForeground",null,d.kg("listInactiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ho=f("list.inactiveFocusBackground",null,d.kg("listInactiveFocusBackground","List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),xo=f("list.inactiveFocusOutline",null,d.kg("listInactiveFocusOutline","List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Oo=f("list.hoverBackground",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:i.Q1.white.transparent(.1),hcLight:i.Q1.fromHex("#0F4A85").transparent(.1)},d.kg("listHoverBackground","List/Tree background when hovering over items using the mouse.")),Qo=f("list.hoverForeground",null,d.kg("listHoverForeground","List/Tree foreground when hovering over items using the mouse.")),Uo=f("list.dropBackground",{dark:"#062F4A",light:"#D6EBFF",hcDark:null,hcLight:null},d.kg("listDropBackground","List/Tree drag and drop background when moving items over other items when using the mouse.")),Wo=f("list.dropBetweenBackground",{dark:D,light:D,hcDark:null,hcLight:null},d.kg("listDropBetweenBackground","List/Tree drag and drop border color when moving items between items when using the mouse.")),$o=f("list.highlightForeground",{dark:"#2AAAFF",light:"#0066BF",hcDark:L,hcLight:L},d.kg("highlight","List/Tree foreground color of the match highlights when searching inside the list/tree."));var Mo,Vo;f("list.focusHighlightForeground",{dark:$o,light:(Mo=Ao,Vo=$o,{op:6,if:Mo,then:Vo,else:"#BBE7FF"}),hcDark:$o,hcLight:$o},d.kg("listFocusHighlightForeground","List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.")),f("list.invalidItemForeground",{dark:"#B89500",light:"#B89500",hcDark:"#B89500",hcLight:"#B5200D"},d.kg("invalidItemForeground","List/Tree foreground color for invalid items, for example an unresolved root in explorer.")),f("list.errorForeground",{dark:"#F88070",light:"#B01011",hcDark:null,hcLight:null},d.kg("listErrorForeground","Foreground color of list items containing errors.")),f("list.warningForeground",{dark:"#CCA700",light:"#855F00",hcDark:null,hcLight:null},d.kg("listWarningForeground","Foreground color of list items containing warnings."));const qo=f("listFilterWidget.background",{light:p(U,0),dark:m(U,0),hcDark:U,hcLight:U},d.kg("listFilterWidgetBackground","Background color of the type filter widget in lists and trees.")),jo=f("listFilterWidget.outline",{dark:i.Q1.transparent,light:i.Q1.transparent,hcDark:"#f38518",hcLight:"#007ACC"},d.kg("listFilterWidgetOutline","Outline color of the type filter widget in lists and trees.")),No=f("listFilterWidget.noMatchesOutline",{dark:"#BE1100",light:"#BE1100",hcDark:I,hcLight:I},d.kg("listFilterWidgetNoMatchesOutline","Outline color of the type filter widget in lists and trees, when there are no matches.")),Ko=f("listFilterWidget.shadow",ge,d.kg("listFilterWidgetShadow","Shadow color of the type filter widget in lists and trees.")),zo=(f("list.filterMatchBackground",{dark:ee,light:ee,hcDark:null,hcLight:null},d.kg("listFilterMatchHighlight","Background color of the filtered match.")),f("list.filterMatchBorder",{dark:oe,light:oe,hcDark:I,hcLight:_},d.kg("listFilterMatchHighlightBorder","Border color of the filtered match.")),f("list.deemphasizedForeground",{dark:"#8C8C8C",light:"#8E8E90",hcDark:"#A7A8A9",hcLight:"#666666"},d.kg("listDeemphasizedForeground","List/Tree foreground color for items that are deemphasized.")),f("tree.indentGuidesStroke",{dark:"#585858",light:"#a9a9a9",hcDark:"#a9a9a9",hcLight:"#a5a5a5"},d.kg("treeIndentGuidesStroke","Tree stroke color for the indentation guides."))),Yo=f("tree.inactiveIndentGuidesStroke",b(zo,.4),d.kg("treeInactiveIndentGuidesStroke","Tree stroke color for the indentation guides that are not active.")),Xo=f("tree.tableColumnsBorder",{dark:"#CCCCCC20",light:"#61616120",hcDark:null,hcLight:null},d.kg("tableColumnsBorder","Table border color between columns.")),Zo=f("tree.tableOddRowsBackground",{dark:b(C,.04),light:b(C,.04),hcDark:null,hcLight:null},d.kg("tableOddRowsBackgroundColor","Background color for odd table rows.")),Jo=(f("editorActionList.background",U,d.kg("editorActionListBackground","Action List background color.")),f("editorActionList.foreground",W,d.kg("editorActionListForeground","Action List foreground color.")),f("editorActionList.focusForeground",Eo,d.kg("editorActionListFocusForeground","Action List foreground color for the focused item.")),f("editorActionList.focusBackground",Ao,d.kg("editorActionListFocusBackground","Action List background color for the focused item.")),f("menu.border",{dark:null,light:null,hcDark:I,hcLight:I},d.kg("menuBorder","Border color of menus."))),er=f("menu.foreground",oo,d.kg("menuForeground","Foreground color of menu items.")),or=f("menu.background",Je,d.kg("menuBackground","Background color of menu items.")),rr=f("menu.selectionForeground",Eo,d.kg("menuSelectionForeground","Foreground color of the selected menu item in menus.")),tr=f("menu.selectionBackground",Ao,d.kg("menuSelectionBackground","Background color of the selected menu item in menus.")),nr=f("menu.selectionBorder",{dark:null,light:null,hcDark:_,hcLight:_},d.kg("menuSelectionBorder","Border color of the selected menu item in menus.")),ir=f("menu.separatorBackground",{dark:"#606060",light:"#D4D4D4",hcDark:I,hcLight:I},d.kg("menuSeparatorBackground","Color of a separator menu item in menus.")),sr=f("quickInput.background",U,d.kg("pickerBackground","Quick picker background color. The quick picker widget is the container for pickers like the command palette.")),cr=f("quickInput.foreground",W,d.kg("pickerForeground","Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.")),ar=f("quickInputTitle.background",{dark:new i.Q1(new i.bU(255,255,255,.105)),light:new i.Q1(new i.bU(0,0,0,.06)),hcDark:"#000000",hcLight:i.Q1.white},d.kg("pickerTitleBackground","Quick picker title background color. The quick picker widget is the container for pickers like the command palette.")),dr=f("pickerGroup.foreground",{dark:"#3794FF",light:"#0066BF",hcDark:i.Q1.white,hcLight:"#0F4A85"},d.kg("pickerGroupForeground","Quick picker color for grouping labels.")),lr=f("pickerGroup.border",{dark:"#3F3F46",light:"#CCCEDB",hcDark:i.Q1.white,hcLight:"#0F4A85"},d.kg("pickerGroupBorder","Quick picker color for grouping borders.")),ur=f("quickInput.list.focusBackground",null,"",void 0,d.kg("quickInput.list.focusBackground deprecation","Please use quickInputList.focusBackground instead")),hr=f("quickInputList.focusForeground",Eo,d.kg("quickInput.listFocusForeground","Quick picker foreground color for the focused item.")),gr=f("quickInputList.focusIconForeground",To,d.kg("quickInput.listFocusIconForeground","Quick picker icon foreground color for the focused item.")),kr=f("quickInputList.focusBackground",{dark:v(ur,Ao),light:v(ur,Ao),hcDark:null,hcLight:null},d.kg("quickInput.listFocusBackground","Quick picker background color for the focused item."));f("search.resultsInfoForeground",{light:C,dark:b(C,.65),hcDark:C,hcLight:C},d.kg("search.resultsInfoForeground","Color of the text in the search viewlet's completion message.")),f("searchEditor.findMatchBackground",{light:b(ee,.66),dark:b(ee,.66),hcDark:ee,hcLight:ee},d.kg("searchEditor.queryMatch","Color of the Search Editor query matches.")),f("searchEditor.findMatchBorder",{light:b(oe,.66),dark:b(oe,.66),hcDark:oe,hcLight:oe},d.kg("searchEditor.editorFindMatchBorder","Border color of the Search Editor query matches."))},11210:(e,o,r)=>{"use strict";r.d(o,{HT:()=>m,pU:()=>p});var t,n,i=r(65958),s=r(5915),c=r(19892),a=r(58881),d=r(2106),l=r(79359),u=r(37264),h=r(19746),g=r(51460),k=r(67167);!function(e){e.getDefinition=function(e,o){let r=e.defaults;for(;a.L.isThemeIcon(r);){const e=f.getIcon(r.id);if(!e)return;r=e.defaults}return r}}(t||(t={})),function(e){e.toJSONObject=function(e){return{weight:e.weight,style:e.style,src:e.src.map((e=>({format:e.format,location:e.location.toString()})))}},e.fromJSONObject=function(e){const o=e=>(0,l.Kg)(e)?e:void 0;if(e&&Array.isArray(e.src)&&e.src.every((e=>(0,l.Kg)(e.format)&&(0,l.Kg)(e.location))))return{weight:o(e.weight),style:o(e.style),src:e.src.map((e=>({format:e.format,location:u.r.parse(e.location)})))}}}(n||(n={}));const f=new class{constructor(){this._onDidChange=new d.vl,this.onDidChange=this._onDidChange.event,this.iconSchema={definitions:{icons:{type:"object",properties:{fontId:{type:"string",description:(0,h.kg)("iconDefinition.fontId","The id of the font to use. If not set, the font that is defined first is used.")},fontCharacter:{type:"string",description:(0,h.kg)("iconDefinition.fontCharacter","The font character associated with the icon definition.")}},additionalProperties:!1,defaultSnippets:[{body:{fontCharacter:"\\\\e030"}}]}},type:"object",properties:{}},this.iconReferenceSchema={type:"string",pattern:`^${a.L.iconNameExpression}$`,enum:[],enumDescriptions:[]},this.iconsById={},this.iconFontsById={}}registerIcon(e,o,r,t){const n=this.iconsById[e];if(n){if(r&&!n.description){n.description=r,this.iconSchema.properties[e].markdownDescription=`${r} $(${e})`;const o=this.iconReferenceSchema.enum.indexOf(e);-1!==o&&(this.iconReferenceSchema.enumDescriptions[o]=r),this._onDidChange.fire()}return n}const i={id:e,description:r,defaults:o,deprecationMessage:t};this.iconsById[e]=i;const s={$ref:"#/definitions/icons"};return t&&(s.deprecationMessage=t),r&&(s.markdownDescription=`${r}: $(${e})`),this.iconSchema.properties[e]=s,this.iconReferenceSchema.enum.push(e),this.iconReferenceSchema.enumDescriptions.push(r||""),this._onDidChange.fire(),{id:e}}getIcons(){return Object.keys(this.iconsById).map((e=>this.iconsById[e]))}getIcon(e){return this.iconsById[e]}getIconSchema(){return this.iconSchema}toString(){const e=(e,o)=>e.id.localeCompare(o.id),o=e=>{for(;a.L.isThemeIcon(e.defaults);)e=this.iconsById[e.defaults.id];return`codicon codicon-${e?e.id:""}`},r=[];r.push("| preview     | identifier                        | default codicon ID                | description"),r.push("| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |");const t=Object.keys(this.iconsById).map((e=>this.iconsById[e]));for(const n of t.filter((e=>!!e.description)).sort(e))r.push(`|<i class="${o(n)}"></i>|${n.id}|${a.L.isThemeIcon(n.defaults)?n.defaults.id:n.id}|${n.description||""}|`);r.push("| preview     | identifier                        "),r.push("| ----------- | --------------------------------- |");for(const n of t.filter((e=>!a.L.isThemeIcon(e.defaults))).sort(e))r.push(`|<i class="${o(n)}"></i>|${n.id}|`);return r.join("\n")}};function p(e,o,r,t){return f.registerIcon(e,o,r,t)}function m(){return f}k.O.add("base.contributions.icons",f),function(){const e=(0,c.J)();for(const o in e){const r="\\"+e[o].toString(16);f.registerIcon(o,{fontCharacter:r})}}();const b="vscode://schemas/icons",v=k.O.as(g.F.JSONContribution);v.registerSchema(b,f.getIconSchema());const B=new i.uC((()=>v.notifySchemaChanged(b)),200);f.onDidChange((()=>{B.isScheduled()||B.schedule()})),p("widget-close",s.W.close,(0,h.kg)("widgetClose","Icon for the close action in widgets.")),p("goto-previous-location",s.W.arrowUp,(0,h.kg)("previousChangeIcon","Icon for goto previous editor location.")),p("goto-next-location",s.W.arrowDown,(0,h.kg)("nextChangeIcon","Icon for goto next editor location.")),a.L.modify(s.W.sync,"spin"),a.L.modify(s.W.loading,"spin")},89563:(e,o,r)=>{"use strict";var t;function n(e){return e===t.HIGH_CONTRAST_DARK||e===t.HIGH_CONTRAST_LIGHT}function i(e){return e===t.DARK||e===t.HIGH_CONTRAST_DARK}r.d(o,{Bb:()=>n,HD:()=>i,zM:()=>t}),function(e){e.DARK="dark",e.LIGHT="light",e.HIGH_CONTRAST_DARK="hcDark",e.HIGH_CONTRAST_LIGHT="hcLight"}(t||(t={}))},89044:(e,o,r)=>{"use strict";r.d(o,{Fd:()=>u,Gy:()=>a,Pz:()=>l,Yf:()=>d,lR:()=>k,zy:()=>g});var t=r(2106),n=r(10998),i=r(82399),s=r(67167),c=r(89563);const a=(0,i.u1)("themeService");function d(e){return{id:e}}function l(e){switch(e){case c.zM.DARK:return"vs-dark";case c.zM.HIGH_CONTRAST_DARK:return"hc-black";case c.zM.HIGH_CONTRAST_LIGHT:return"hc-light";default:return"vs"}}const u={ThemingContribution:"base.contributions.theming"},h=new class{constructor(){this.themingParticipants=[],this.themingParticipants=[],this.onThemingParticipantAddedEmitter=new t.vl}onColorThemeChange(e){return this.themingParticipants.push(e),this.onThemingParticipantAddedEmitter.fire(e),(0,n.s)((()=>{const o=this.themingParticipants.indexOf(e);this.themingParticipants.splice(o,1)}))}getThemingParticipants(){return this.themingParticipants}};function g(e){return h.onColorThemeChange(e)}s.O.add(u.ThemingContribution,h);class k extends n.jG{constructor(e){super(),this.themeService=e,this.theme=e.getColorTheme(),this._register(this.themeService.onDidColorThemeChange((e=>this.onThemeChange(e))))}onThemeChange(e){this.theme=e,this.updateStyles()}updateStyles(){}}},38803:(e,o,r)=>{"use strict";r.d(o,{$D:()=>t,I_:()=>i,To:()=>n,Ym:()=>s});const t=(0,r(82399).u1)("undoRedoService");class n{constructor(e,o){this.resource=e,this.elements=o}}class i{static{this._ID=0}constructor(){this.id=i._ID++,this.order=1}nextOrder(){return 0===this.id?0:this.order++}static{this.None=new i}}class s{static{this._ID=0}constructor(){this.id=s._ID++,this.order=1}nextOrder(){return 0===this.id?0:this.order++}static{this.None=new s}}},32492:(e,o,r)=>{"use strict";var t=r(94327),n=r(10998),i=r(13072),s=r(66459),c=r(19746),a=r(94535),d=r(66726),l=r(29879),u=r(38803),h=function(e,o){return function(r,t){o(r,t,e)}};function g(e){return e.scheme===i.ny.file?e.fsPath:e.path}let k=0;class f{constructor(e,o,r,t,n,i,s){this.id=++k,this.type=0,this.actual=e,this.label=e.label,this.confirmBeforeUndo=e.confirmBeforeUndo||!1,this.resourceLabel=o,this.strResource=r,this.resourceLabels=[this.resourceLabel],this.strResources=[this.strResource],this.groupId=t,this.groupOrder=n,this.sourceId=i,this.sourceOrder=s,this.isValid=!0}setValid(e){this.isValid=e}toString(){return`[id:${this.id}] [group:${this.groupId}] [${this.isValid?"  VALID":"INVALID"}] ${this.actual.constructor.name} - ${this.actual}`}}class p{constructor(e,o){this.resourceLabel=e,this.reason=o}}class m{constructor(){this.elements=new Map}createMessage(){const e=[],o=[];for(const[,r]of this.elements)(0===r.reason?e:o).push(r.resourceLabel);const r=[];return e.length>0&&r.push(c.kg({key:"externalRemoval",comment:["{0} is a list of filenames"]},"The following files have been closed and modified on disk: {0}.",e.join(", "))),o.length>0&&r.push(c.kg({key:"noParallelUniverses",comment:["{0} is a list of filenames"]},"The following files have been modified in an incompatible way: {0}.",o.join(", "))),r.join("\n")}get size(){return this.elements.size}has(e){return this.elements.has(e)}set(e,o){this.elements.set(e,o)}delete(e){return this.elements.delete(e)}}class b{constructor(e,o,r,t,n,i,s){this.id=++k,this.type=1,this.actual=e,this.label=e.label,this.confirmBeforeUndo=e.confirmBeforeUndo||!1,this.resourceLabels=o,this.strResources=r,this.groupId=t,this.groupOrder=n,this.sourceId=i,this.sourceOrder=s,this.removedResources=null,this.invalidatedResources=null}canSplit(){return"function"==typeof this.actual.split}removeResource(e,o,r){this.removedResources||(this.removedResources=new m),this.removedResources.has(o)||this.removedResources.set(o,new p(e,r))}setValid(e,o,r){r?this.invalidatedResources&&(this.invalidatedResources.delete(o),0===this.invalidatedResources.size&&(this.invalidatedResources=null)):(this.invalidatedResources||(this.invalidatedResources=new m),this.invalidatedResources.has(o)||this.invalidatedResources.set(o,new p(e,0)))}toString(){return`[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources?"INVALID":"  VALID"}] ${this.actual.constructor.name} - ${this.actual}`}}class v{constructor(e,o){this.resourceLabel=e,this.strResource=o,this._past=[],this._future=[],this.locked=!1,this.versionId=1}dispose(){for(const e of this._past)1===e.type&&e.removeResource(this.resourceLabel,this.strResource,0);for(const e of this._future)1===e.type&&e.removeResource(this.resourceLabel,this.strResource,0);this.versionId++}toString(){const e=[];e.push(`* ${this.strResource}:`);for(let o=0;o<this._past.length;o++)e.push(`   * [UNDO] ${this._past[o]}`);for(let o=this._future.length-1;o>=0;o--)e.push(`   * [REDO] ${this._future[o]}`);return e.join("\n")}flushAllElements(){this._past=[],this._future=[],this.versionId++}_setElementValidFlag(e,o){1===e.type?e.setValid(this.resourceLabel,this.strResource,o):e.setValid(o)}setElementsValidFlag(e,o){for(const r of this._past)o(r.actual)&&this._setElementValidFlag(r,e);for(const r of this._future)o(r.actual)&&this._setElementValidFlag(r,e)}pushElement(e){for(const e of this._future)1===e.type&&e.removeResource(this.resourceLabel,this.strResource,1);this._future=[],this._past.push(e),this.versionId++}createSnapshot(e){const o=[];for(let e=0,r=this._past.length;e<r;e++)o.push(this._past[e].id);for(let e=this._future.length-1;e>=0;e--)o.push(this._future[e].id);return new u.To(e,o)}restoreSnapshot(e){const o=e.elements.length;let r=!0,t=0,n=-1;for(let i=0,s=this._past.length;i<s;i++,t++){const s=this._past[i];r&&(t>=o||s.id!==e.elements[t])&&(r=!1,n=0),r||1!==s.type||s.removeResource(this.resourceLabel,this.strResource,0)}let i=-1;for(let n=this._future.length-1;n>=0;n--,t++){const s=this._future[n];r&&(t>=o||s.id!==e.elements[t])&&(r=!1,i=n),r||1!==s.type||s.removeResource(this.resourceLabel,this.strResource,0)}-1!==n&&(this._past=this._past.slice(0,n)),-1!==i&&(this._future=this._future.slice(i+1)),this.versionId++}getElements(){const e=[],o=[];for(const o of this._past)e.push(o.actual);for(const e of this._future)o.push(e.actual);return{past:e,future:o}}getClosestPastElement(){return 0===this._past.length?null:this._past[this._past.length-1]}getSecondClosestPastElement(){return this._past.length<2?null:this._past[this._past.length-2]}getClosestFutureElement(){return 0===this._future.length?null:this._future[this._future.length-1]}hasPastElements(){return this._past.length>0}hasFutureElements(){return this._future.length>0}splitPastWorkspaceElement(e,o){for(let r=this._past.length-1;r>=0;r--)if(this._past[r]===e){o.has(this.strResource)?this._past[r]=o.get(this.strResource):this._past.splice(r,1);break}this.versionId++}splitFutureWorkspaceElement(e,o){for(let r=this._future.length-1;r>=0;r--)if(this._future[r]===e){o.has(this.strResource)?this._future[r]=o.get(this.strResource):this._future.splice(r,1);break}this.versionId++}moveBackward(e){this._past.pop(),this._future.push(e),this.versionId++}moveForward(e){this._future.pop(),this._past.push(e),this.versionId++}}class B{constructor(e){this.editStacks=e,this._versionIds=[];for(let e=0,o=this.editStacks.length;e<o;e++)this._versionIds[e]=this.editStacks[e].versionId}isValid(){for(let e=0,o=this.editStacks.length;e<o;e++)if(this._versionIds[e]!==this.editStacks[e].versionId)return!1;return!0}}const F=new v("","");F.locked=!0;let w=class{constructor(e,o){this._dialogService=e,this._notificationService=o,this._editStacks=new Map,this._uriComparisonKeyComputers=[]}getUriComparisonKey(e){for(const o of this._uriComparisonKeyComputers)if(o[0]===e.scheme)return o[1].getComparisonKey(e);return e.toString()}_print(e){console.log("------------------------------------"),console.log(`AFTER ${e}: `);const o=[];for(const e of this._editStacks)o.push(e[1].toString());console.log(o.join("\n"))}pushElement(e,o=u.I_.None,r=u.Ym.None){if(0===e.type){const t=g(e.resource),n=this.getUriComparisonKey(e.resource);this._pushElement(new f(e,t,n,o.id,o.nextOrder(),r.id,r.nextOrder()))}else{const t=new Set,n=[],i=[];for(const o of e.resources){const e=g(o),r=this.getUriComparisonKey(o);t.has(r)||(t.add(r),n.push(e),i.push(r))}1===n.length?this._pushElement(new f(e,n[0],i[0],o.id,o.nextOrder(),r.id,r.nextOrder())):this._pushElement(new b(e,n,i,o.id,o.nextOrder(),r.id,r.nextOrder()))}}_pushElement(e){for(let o=0,r=e.strResources.length;o<r;o++){const r=e.resourceLabels[o],t=e.strResources[o];let n;this._editStacks.has(t)?n=this._editStacks.get(t):(n=new v(r,t),this._editStacks.set(t,n)),n.pushElement(e)}}getLastElement(e){const o=this.getUriComparisonKey(e);if(this._editStacks.has(o)){const e=this._editStacks.get(o);if(e.hasFutureElements())return null;const r=e.getClosestPastElement();return r?r.actual:null}return null}_splitPastWorkspaceElement(e,o){const r=e.actual.split(),t=new Map;for(const e of r){const o=g(e.resource),r=this.getUriComparisonKey(e.resource),n=new f(e,o,r,0,0,0,0);t.set(n.strResource,n)}for(const r of e.strResources)o&&o.has(r)||this._editStacks.get(r).splitPastWorkspaceElement(e,t)}_splitFutureWorkspaceElement(e,o){const r=e.actual.split(),t=new Map;for(const e of r){const o=g(e.resource),r=this.getUriComparisonKey(e.resource),n=new f(e,o,r,0,0,0,0);t.set(n.strResource,n)}for(const r of e.strResources)o&&o.has(r)||this._editStacks.get(r).splitFutureWorkspaceElement(e,t)}removeElements(e){const o="string"==typeof e?e:this.getUriComparisonKey(e);this._editStacks.has(o)&&(this._editStacks.get(o).dispose(),this._editStacks.delete(o))}setElementsValidFlag(e,o,r){const t=this.getUriComparisonKey(e);this._editStacks.has(t)&&this._editStacks.get(t).setElementsValidFlag(o,r)}createSnapshot(e){const o=this.getUriComparisonKey(e);return this._editStacks.has(o)?this._editStacks.get(o).createSnapshot(e):new u.To(e,[])}restoreSnapshot(e){const o=this.getUriComparisonKey(e.resource);if(this._editStacks.has(o)){const r=this._editStacks.get(o);r.restoreSnapshot(e),r.hasPastElements()||r.hasFutureElements()||(r.dispose(),this._editStacks.delete(o))}}getElements(e){const o=this.getUriComparisonKey(e);return this._editStacks.has(o)?this._editStacks.get(o).getElements():{past:[],future:[]}}_findClosestUndoElementWithSource(e){if(!e)return[null,null];let o=null,r=null;for(const[t,n]of this._editStacks){const i=n.getClosestPastElement();i&&i.sourceId===e&&(!o||i.sourceOrder>o.sourceOrder)&&(o=i,r=t)}return[o,r]}canUndo(e){if(e instanceof u.Ym){const[,o]=this._findClosestUndoElementWithSource(e.id);return!!o}const o=this.getUriComparisonKey(e);return!!this._editStacks.has(o)&&this._editStacks.get(o).hasPastElements()}_onError(e,o){(0,t.dz)(e);for(const e of o.strResources)this.removeElements(e);this._notificationService.error(e)}_acquireLocks(e){for(const o of e.editStacks)if(o.locked)throw new Error("Cannot acquire edit stack lock");for(const o of e.editStacks)o.locked=!0;return()=>{for(const o of e.editStacks)o.locked=!1}}_safeInvokeWithLocks(e,o,r,t,n){const i=this._acquireLocks(r);let s;try{s=o()}catch(o){return i(),t.dispose(),this._onError(o,e)}return s?s.then((()=>(i(),t.dispose(),n())),(o=>(i(),t.dispose(),this._onError(o,e)))):(i(),t.dispose(),n())}async _invokeWorkspacePrepare(e){if(void 0===e.actual.prepareUndoRedo)return n.jG.None;const o=e.actual.prepareUndoRedo();return void 0===o?n.jG.None:o}_invokeResourcePrepare(e,o){if(1!==e.actual.type||void 0===e.actual.prepareUndoRedo)return o(n.jG.None);const r=e.actual.prepareUndoRedo();return r?(0,n.Xm)(r)?o(r):r.then((e=>o(e))):o(n.jG.None)}_getAffectedEditStacks(e){const o=[];for(const r of e.strResources)o.push(this._editStacks.get(r)||F);return new B(o)}_tryToSplitAndUndo(e,o,r,t){if(o.canSplit())return this._splitPastWorkspaceElement(o,r),this._notificationService.warn(t),new y(this._undo(e,0,!0));for(const e of o.strResources)this.removeElements(e);return this._notificationService.warn(t),new y}_checkWorkspaceUndo(e,o,r,t){if(o.removedResources)return this._tryToSplitAndUndo(e,o,o.removedResources,c.kg({key:"cannotWorkspaceUndo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not undo '{0}' across all files. {1}",o.label,o.removedResources.createMessage()));if(t&&o.invalidatedResources)return this._tryToSplitAndUndo(e,o,o.invalidatedResources,c.kg({key:"cannotWorkspaceUndo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not undo '{0}' across all files. {1}",o.label,o.invalidatedResources.createMessage()));const n=[];for(const e of r.editStacks)e.getClosestPastElement()!==o&&n.push(e.resourceLabel);if(n.length>0)return this._tryToSplitAndUndo(e,o,null,c.kg({key:"cannotWorkspaceUndoDueToChanges",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not undo '{0}' across all files because changes were made to {1}",o.label,n.join(", ")));const i=[];for(const e of r.editStacks)e.locked&&i.push(e.resourceLabel);return i.length>0?this._tryToSplitAndUndo(e,o,null,c.kg({key:"cannotWorkspaceUndoDueToInProgressUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}",o.label,i.join(", "))):r.isValid()?null:this._tryToSplitAndUndo(e,o,null,c.kg({key:"cannotWorkspaceUndoDueToInMeantimeUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime",o.label))}_workspaceUndo(e,o,r){const t=this._getAffectedEditStacks(o),n=this._checkWorkspaceUndo(e,o,t,!1);return n?n.returnValue:this._confirmAndExecuteWorkspaceUndo(e,o,t,r)}_isPartOfUndoGroup(e){if(!e.groupId)return!1;for(const[,o]of this._editStacks){const r=o.getClosestPastElement();if(r){if(r===e){const r=o.getSecondClosestPastElement();if(r&&r.groupId===e.groupId)return!0}if(r.groupId===e.groupId)return!0}}return!1}async _confirmAndExecuteWorkspaceUndo(e,o,r,t){if(o.canSplit()&&!this._isPartOfUndoGroup(o)){let n;!function(e){e[e.All=0]="All",e[e.This=1]="This",e[e.Cancel=2]="Cancel"}(n||(n={}));const{result:i}=await this._dialogService.prompt({type:s.A.Info,message:c.kg("confirmWorkspace","Would you like to undo '{0}' across all files?",o.label),buttons:[{label:c.kg({key:"ok",comment:["{0} denotes a number that is > 1, && denotes a mnemonic"]},"&&Undo in {0} Files",r.editStacks.length),run:()=>n.All},{label:c.kg({key:"nok",comment:["&& denotes a mnemonic"]},"Undo this &&File"),run:()=>n.This}],cancelButton:{run:()=>n.Cancel}});if(i===n.Cancel)return;if(i===n.This)return this._splitPastWorkspaceElement(o,null),this._undo(e,0,!0);const a=this._checkWorkspaceUndo(e,o,r,!1);if(a)return a.returnValue;t=!0}let n;try{n=await this._invokeWorkspacePrepare(o)}catch(e){return this._onError(e,o)}const i=this._checkWorkspaceUndo(e,o,r,!0);if(i)return n.dispose(),i.returnValue;for(const e of r.editStacks)e.moveBackward(o);return this._safeInvokeWithLocks(o,(()=>o.actual.undo()),r,n,(()=>this._continueUndoInGroup(o.groupId,t)))}_resourceUndo(e,o,r){if(o.isValid){if(!e.locked)return this._invokeResourcePrepare(o,(t=>(e.moveBackward(o),this._safeInvokeWithLocks(o,(()=>o.actual.undo()),new B([e]),t,(()=>this._continueUndoInGroup(o.groupId,r))))));{const e=c.kg({key:"cannotResourceUndoDueToInProgressUndoRedo",comment:["{0} is a label for an operation."]},"Could not undo '{0}' because there is already an undo or redo operation running.",o.label);this._notificationService.warn(e)}}else e.flushAllElements()}_findClosestUndoElementInGroup(e){if(!e)return[null,null];let o=null,r=null;for(const[t,n]of this._editStacks){const i=n.getClosestPastElement();i&&i.groupId===e&&(!o||i.groupOrder>o.groupOrder)&&(o=i,r=t)}return[o,r]}_continueUndoInGroup(e,o){if(!e)return;const[,r]=this._findClosestUndoElementInGroup(e);return r?this._undo(r,0,o):void 0}undo(e){if(e instanceof u.Ym){const[,o]=this._findClosestUndoElementWithSource(e.id);return o?this._undo(o,e.id,!1):void 0}return"string"==typeof e?this._undo(e,0,!1):this._undo(this.getUriComparisonKey(e),0,!1)}_undo(e,o=0,r){if(!this._editStacks.has(e))return;const t=this._editStacks.get(e),n=t.getClosestPastElement();if(n){if(n.groupId){const[e,t]=this._findClosestUndoElementInGroup(n.groupId);if(n!==e&&t)return this._undo(t,o,r)}if((n.sourceId!==o||n.confirmBeforeUndo)&&!r)return this._confirmAndContinueUndo(e,o,n);try{return 1===n.type?this._workspaceUndo(e,n,r):this._resourceUndo(t,n,r)}finally{}}}async _confirmAndContinueUndo(e,o,r){if((await this._dialogService.confirm({message:c.kg("confirmDifferentSource","Would you like to undo '{0}'?",r.label),primaryButton:c.kg({key:"confirmDifferentSource.yes",comment:["&& denotes a mnemonic"]},"&&Yes"),cancelButton:c.kg("confirmDifferentSource.no","No")})).confirmed)return this._undo(e,o,!0)}_findClosestRedoElementWithSource(e){if(!e)return[null,null];let o=null,r=null;for(const[t,n]of this._editStacks){const i=n.getClosestFutureElement();i&&i.sourceId===e&&(!o||i.sourceOrder<o.sourceOrder)&&(o=i,r=t)}return[o,r]}canRedo(e){if(e instanceof u.Ym){const[,o]=this._findClosestRedoElementWithSource(e.id);return!!o}const o=this.getUriComparisonKey(e);return!!this._editStacks.has(o)&&this._editStacks.get(o).hasFutureElements()}_tryToSplitAndRedo(e,o,r,t){if(o.canSplit())return this._splitFutureWorkspaceElement(o,r),this._notificationService.warn(t),new y(this._redo(e));for(const e of o.strResources)this.removeElements(e);return this._notificationService.warn(t),new y}_checkWorkspaceRedo(e,o,r,t){if(o.removedResources)return this._tryToSplitAndRedo(e,o,o.removedResources,c.kg({key:"cannotWorkspaceRedo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not redo '{0}' across all files. {1}",o.label,o.removedResources.createMessage()));if(t&&o.invalidatedResources)return this._tryToSplitAndRedo(e,o,o.invalidatedResources,c.kg({key:"cannotWorkspaceRedo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not redo '{0}' across all files. {1}",o.label,o.invalidatedResources.createMessage()));const n=[];for(const e of r.editStacks)e.getClosestFutureElement()!==o&&n.push(e.resourceLabel);if(n.length>0)return this._tryToSplitAndRedo(e,o,null,c.kg({key:"cannotWorkspaceRedoDueToChanges",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not redo '{0}' across all files because changes were made to {1}",o.label,n.join(", ")));const i=[];for(const e of r.editStacks)e.locked&&i.push(e.resourceLabel);return i.length>0?this._tryToSplitAndRedo(e,o,null,c.kg({key:"cannotWorkspaceRedoDueToInProgressUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}",o.label,i.join(", "))):r.isValid()?null:this._tryToSplitAndRedo(e,o,null,c.kg({key:"cannotWorkspaceRedoDueToInMeantimeUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime",o.label))}_workspaceRedo(e,o){const r=this._getAffectedEditStacks(o),t=this._checkWorkspaceRedo(e,o,r,!1);return t?t.returnValue:this._executeWorkspaceRedo(e,o,r)}async _executeWorkspaceRedo(e,o,r){let t;try{t=await this._invokeWorkspacePrepare(o)}catch(e){return this._onError(e,o)}const n=this._checkWorkspaceRedo(e,o,r,!0);if(n)return t.dispose(),n.returnValue;for(const e of r.editStacks)e.moveForward(o);return this._safeInvokeWithLocks(o,(()=>o.actual.redo()),r,t,(()=>this._continueRedoInGroup(o.groupId)))}_resourceRedo(e,o){if(o.isValid){if(!e.locked)return this._invokeResourcePrepare(o,(r=>(e.moveForward(o),this._safeInvokeWithLocks(o,(()=>o.actual.redo()),new B([e]),r,(()=>this._continueRedoInGroup(o.groupId))))));{const e=c.kg({key:"cannotResourceRedoDueToInProgressUndoRedo",comment:["{0} is a label for an operation."]},"Could not redo '{0}' because there is already an undo or redo operation running.",o.label);this._notificationService.warn(e)}}else e.flushAllElements()}_findClosestRedoElementInGroup(e){if(!e)return[null,null];let o=null,r=null;for(const[t,n]of this._editStacks){const i=n.getClosestFutureElement();i&&i.groupId===e&&(!o||i.groupOrder<o.groupOrder)&&(o=i,r=t)}return[o,r]}_continueRedoInGroup(e){if(!e)return;const[,o]=this._findClosestRedoElementInGroup(e);return o?this._redo(o):void 0}redo(e){if(e instanceof u.Ym){const[,o]=this._findClosestRedoElementWithSource(e.id);return o?this._redo(o):void 0}return"string"==typeof e?this._redo(e):this._redo(this.getUriComparisonKey(e))}_redo(e){if(!this._editStacks.has(e))return;const o=this._editStacks.get(e),r=o.getClosestFutureElement();if(r){if(r.groupId){const[e,o]=this._findClosestRedoElementInGroup(r.groupId);if(r!==e&&o)return this._redo(o)}try{return 1===r.type?this._workspaceRedo(e,r):this._resourceRedo(o,r)}finally{}}}};w=function(e,o,r,t){var n,i=arguments.length,s=i<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,r):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,o,r,t);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(s=(i<3?n(s):i>3?n(o,r,s):n(o,r))||s);return i>3&&s&&Object.defineProperty(o,r,s),s}([h(0,a.X),h(1,l.Ot)],w);class y{constructor(e){this.returnValue=e}}(0,d.v)(u.$D,w,1)},26851:(e,o,r)=>{"use strict";r.d(o,{VR:()=>n,cn:()=>s,mX:()=>i});var t=r(19746);r(18019),r(66525),r(37264);const n=(0,r(82399).u1)("contextService");class i{constructor(e,o){this.raw=o,this.uri=e.uri,this.index=e.index,this.name=e.name}toJSON(){return{uri:this.uri,name:this.name,index:this.index}}}(0,t.kg)("codeWorkspace","Code Workspace");const s="4064f6ec-cb38-4ad0-af64-ee6467e63c82"},84657:(e,o,r)=>{"use strict";r.d(o,{L:()=>t});const t=(0,r(82399).u1)("workspaceTrustManagementService")}}]);