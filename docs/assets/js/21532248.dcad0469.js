"use strict";(self.webpackChunk_docstack_docs=self.webpackChunk_docstack_docs||[]).push([[1208],{8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var a=n(6540);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}},8565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"client/index","title":"index","description":"A standalone, client-side datastore for web applications. This module provides a local, in-browser database built on PouchDB, leveraging the same data model and API structure as its docstack server counterpart. It is designed for offline-first applications and direct data management without requiring an active server connection.","source":"@site/docs/client/index.md","sourceDirName":"client","slug":"/client/","permalink":"/docstack/docs/client/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/client/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"client","previous":{"title":"@docstack/client","permalink":"/docstack/docs/client/globals"}}');var s=n(4848),i=n(8453);const o={},c=void 0,r={},d=[{value:"\u2728 Features",id:"-features",level:2},{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"\ud83d\ude80 Usage",id:"-usage",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"A standalone, client-side datastore for web applications. This module provides a local, in-browser database built on PouchDB, leveraging the same data model and API structure as its docstack server counterpart. It is designed for offline-first applications and direct data management without requiring an active server connection."}),"\n",(0,s.jsx)(t.h2,{id:"-features",children:"\u2728 Features"}),"\n",(0,s.jsx)(t.p,{children:"Local Data Persistence: Utilizes PouchDB to store your structured data directly in the browser's storage."}),"\n",(0,s.jsx)(t.p,{children:"Offline-First: Provides full read/write access to your data even without an internet connection."}),"\n",(0,s.jsx)(t.p,{children:"Shared Data Models: Implements the same data model principles as the docstack server, ensuring consistency across your application stack."}),"\n",(0,s.jsx)(t.p,{children:"Seamless Replication: Designed to be easily replicated with a CouchDB or docstack server instance when a connection is available."}),"\n",(0,s.jsx)(t.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,s.jsx)(t.p,{children:"To add the client to your project, use your preferred package manager."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm install @docstack/client\n"})}),"\n",(0,s.jsx)(t.h2,{id:"-usage",children:"\ud83d\ude80 Usage"}),"\n",(0,s.jsx)(t.p,{children:"First, import and instantiate the DocstackClient with the desired database name. This will create or open a PouchDB database in the browser."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"\nimport {DocStack} from '@docstack/client';\n\nconst client = new DocStack('local-ds');\n"})}),"\n",(0,s.jsx)(t.p,{children:"Then, use the provided methods to interact with your local data. Most methods are asynchronous and return a Promise."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);